/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -c facetracker_workerInterface -a facetracker_worker_interface.h:facetracker_worker_interface.cpp com.robot.facetracker_worker.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "facetracker_worker_interface.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class facetracker_workerInterface
 */

facetracker_workerInterface::facetracker_workerInterface(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

facetracker_workerInterface::~facetracker_workerInterface()
{
    // destructor
}

QPoint facetracker_workerInterface::centerDistance()
{
    // handle method call com.robot.rotracking.centerDistance
    QPoint out0;
    QMetaObject::invokeMethod(parent(), "centerDistance", Q_RETURN_ARG(QPoint, out0));
    return out0;
}

void facetracker_workerInterface::detectCircles()
{
    // handle method call com.robot.rotracking.detectCircles
    QMetaObject::invokeMethod(parent(), "detectCircles");
}

QString facetracker_workerInterface::getAddress()
{
    // handle method call com.robot.rotracking.getAddress
    QString out0;
    QMetaObject::invokeMethod(parent(), "getAddress", Q_RETURN_ARG(QString, out0));
    return out0;
}

QString facetracker_workerInterface::getDescription()
{
    // handle method call com.robot.rotracking.getDescription
    QString out0;
    QMetaObject::invokeMethod(parent(), "getDescription", Q_RETURN_ARG(QString, out0));
    return out0;
}

QString facetracker_workerInterface::getName()
{
    // handle method call com.robot.rotracking.getName
    QString out0;
    QMetaObject::invokeMethod(parent(), "getName", Q_RETURN_ARG(QString, out0));
    return out0;
}

QString facetracker_workerInterface::getPluginType()
{
    // handle method call com.robot.rotracking.getPluginType
    QString out0;
    QMetaObject::invokeMethod(parent(), "getPluginType", Q_RETURN_ARG(QString, out0));
    return out0;
}

bool facetracker_workerInterface::isBallDetected()
{
    // handle method call com.robot.rotracking.isBallDetected
    bool out0;
    QMetaObject::invokeMethod(parent(), "isBallDetected", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool facetracker_workerInterface::isEnabled()
{
    // handle method call com.robot.rotracking.isEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "isEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

void facetracker_workerInterface::setEnabled(bool bEnabled)
{
    // handle method call com.robot.rotracking.setEnabled
    QMetaObject::invokeMethod(parent(), "setEnabled", Q_ARG(bool, bEnabled));
}

void facetracker_workerInterface::startStream()
{
    // handle method call com.robot.rotracking.startStream
    QMetaObject::invokeMethod(parent(), "startStream");
}

void facetracker_workerInterface::startTracking()
{
    // handle method call com.robot.rotracking.startTracking
    QMetaObject::invokeMethod(parent(), "startTracking");
}

void facetracker_workerInterface::stopStream()
{
    // handle method call com.robot.rotracking.stopStream
    QMetaObject::invokeMethod(parent(), "stopStream");
}

void facetracker_workerInterface::stopTracking()
{
    // handle method call com.robot.rotracking.stopTracking
    QMetaObject::invokeMethod(parent(), "stopTracking");
}

QPoint facetracker_workerInterface::xyPossition()
{
    // handle method call com.robot.rotracking.xyPossition
    QPoint out0;
    QMetaObject::invokeMethod(parent(), "xyPossition", Q_RETURN_ARG(QPoint, out0));
    return out0;
}

int facetracker_workerInterface::zPossition()
{
    // handle method call com.robot.rotracking.zPossition
    int out0;
    QMetaObject::invokeMethod(parent(), "zPossition", Q_RETURN_ARG(int, out0));
    return out0;
}

