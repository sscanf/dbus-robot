/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -c facetracker_workerInterface -a facetracker_worker_interface.h:facetracker_worker_interface.cpp com.robot.facetracker_worker.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef FACETRACKER_WORKER_INTERFACE_H
#define FACETRACKER_WORKER_INTERFACE_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.robot.rotracking
 */
class facetracker_workerInterface: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.robot.rotracking")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.robot.rotracking\">\n"
"    <signal name=\"error\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"bError\"/>\n"
"    </signal>\n"
"    <signal name=\"possitionChanged\">\n"
"      <arg direction=\"out\" type=\"\" name=\"possition\"/>\n"
"      <annotation value=\"QPoint\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </signal>\n"
"    <signal name=\"ballLost\"/>\n"
"    <signal name=\"nextTrack\"/>\n"
"    <method name=\"getName\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getAddress\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getPluginType\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getDescription\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"isEnabled\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"setEnabled\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"bEnabled\"/>\n"
"    </method>\n"
"    <method name=\"startTracking\"/>\n"
"    <method name=\"stopTracking\"/>\n"
"    <method name=\"startStream\"/>\n"
"    <method name=\"stopStream\"/>\n"
"    <method name=\"xyPossition\">\n"
"      <arg direction=\"out\" type=\"\"/>\n"
"      <annotation value=\"QPoint\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"zPossition\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"centerDistance\">\n"
"      <arg direction=\"out\" type=\"\"/>\n"
"      <annotation value=\"QPoint\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"isBallDetected\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"detectCircles\"/>\n"
"  </interface>\n"
        "")
public:
    facetracker_workerInterface(QObject *parent);
    virtual ~facetracker_workerInterface();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QPoint centerDistance();
    void detectCircles();
    QString getAddress();
    QString getDescription();
    QString getName();
    QString getPluginType();
    bool isBallDetected();
    bool isEnabled();
    void setEnabled(bool bEnabled);
    void startStream();
    void startTracking();
    void stopStream();
    void stopTracking();
    QPoint xyPossition();
    int zPossition();
Q_SIGNALS: // SIGNALS
    void ballLost();
    void error(bool bError);
    void nextTrack();
    void possitionChanged(const QPoint &possition);
};

#endif
