/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -c piccontroller_workerInterface -a piccontroller_worker_interface.h:piccontroller_worker_interface.cpp com.robot.piccontroller_worker.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef PICCONTROLLER_WORKER_INTERFACE_H
#define PICCONTROLLER_WORKER_INTERFACE_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.robot.roengines
 */
class piccontroller_workerInterface: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.robot.roengines")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.robot.roengines\">\n"
"    <signal name=\"error\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"bError\"/>\n"
"    </signal>\n"
"    <signal name=\"encoderRightChange\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"val\"/>\n"
"    </signal>\n"
"    <signal name=\"encoderLeftChange\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"val\"/>\n"
"    </signal>\n"
"    <method name=\"getName\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getAddress\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getPluginType\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getDescription\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"isEnabled\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"setEnabled\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"bEnabled\"/>\n"
"    </method>\n"
"    <method name=\"getSpeed\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"getEncoderLeft\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"getEncoderRight\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"setSpeed\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"speed\"/>\n"
"    </method>\n"
"    <method name=\"setTurn\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"turn\"/>\n"
"    </method>\n"
"    <method name=\"setDualSpeed\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"left\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"right\"/>\n"
"    </method>\n"
"    <method name=\"setMaximumSpeed\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"speed\"/>\n"
"    </method>\n"
"    <method name=\"getDirection\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    piccontroller_workerInterface(QObject *parent);
    virtual ~piccontroller_workerInterface();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QString getAddress();
    QString getDescription();
    int getDirection();
    int getEncoderLeft();
    int getEncoderRight();
    QString getName();
    QString getPluginType();
    int getSpeed();
    bool isEnabled();
    void setDualSpeed(int left, int right);
    void setEnabled(bool bEnabled);
    void setMaximumSpeed(int speed);
    void setSpeed(int speed);
    void setTurn(int turn);
Q_SIGNALS: // SIGNALS
    void encoderLeftChange(int val);
    void encoderRightChange(int val);
    void error(bool bError);
};

#endif
